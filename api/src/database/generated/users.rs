//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15
#![allow(clippy::enum_variant_names)]

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "users")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub api_key: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::cash_assets::Entity")]
    CashAssets,
    #[sea_orm(has_many = "super::coin_assets::Entity")]
    CoinAssets,
    #[sea_orm(has_many = "super::raw_assets::Entity")]
    RawAssets,
}

impl Related<super::cash_assets::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CashAssets.def()
    }
}

impl Related<super::coin_assets::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CoinAssets.def()
    }
}

impl Related<super::raw_assets::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::RawAssets.def()
    }
}

impl Related<super::coins::Entity> for Entity {
    fn to() -> RelationDef {
        super::coin_assets::Relation::Coins.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::coin_assets::Relation::Users.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
